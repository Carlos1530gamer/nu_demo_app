// Mocks generated by Mockito 5.3.2 from annotations
// in nu_demo_app/test/domain/use_cases/shortener_url/shortener_url_use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:nu_demo_app/core/networking/base_networking.dart' as _i5;
import 'package:nu_demo_app/data/entities/url_shortened_response.dart' as _i2;
import 'package:nu_demo_app/data/repository/implementations/url_shortened_repository_imp.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUrlShortenedResponse_0 extends _i1.SmartFake
    implements _i2.UrlShortenedResponse {
  _FakeUrlShortenedResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [UrlShortenedRepositoryImp].
///
/// See the documentation for Mockito's code generation for more information.
class MockUrlShortenedRepositoryImp extends _i1.Mock
    implements _i3.UrlShortenedRepositoryImp {
  @override
  Map<String, String> get defaultHeaders => (super.noSuchMethod(
        Invocation.getter(#defaultHeaders),
        returnValue: <String, String>{},
        returnValueForMissingStub: <String, String>{},
      ) as Map<String, String>);
  @override
  _i4.Future<_i2.UrlShortenedResponse> short({required String? url}) =>
      (super.noSuchMethod(
        Invocation.method(
          #short,
          [],
          {#url: url},
        ),
        returnValue: _i4.Future<_i2.UrlShortenedResponse>.value(
            _FakeUrlShortenedResponse_0(
          this,
          Invocation.method(
            #short,
            [],
            {#url: url},
          ),
        )),
        returnValueForMissingStub: _i4.Future<_i2.UrlShortenedResponse>.value(
            _FakeUrlShortenedResponse_0(
          this,
          Invocation.method(
            #short,
            [],
            {#url: url},
          ),
        )),
      ) as _i4.Future<_i2.UrlShortenedResponse>);
  @override
  _i4.Future<Map<String, dynamic>> execute({
    required _i5.RequestType? type,
    required String? path,
    Map<String, String>? aditionalHeaders,
    Map<String, dynamic>? body,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
          {
            #type: type,
            #path: path,
            #aditionalHeaders: aditionalHeaders,
            #body: body,
          },
        ),
        returnValue:
            _i4.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i4.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i4.Future<Map<String, dynamic>>);
}
